# Generated by Django 3.2.8 on 2024-01-30 17:53

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del país')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.CreateModel(
            name='Creation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_title', models.CharField(max_length=10000, null=True, verbose_name='Título original')),
                ('subtitles', models.TextField(blank=True, null=True, verbose_name='Subtítulos, capítulos y entregas')),
                ('authorship', models.TextField(blank=True, null=True, verbose_name='Autoría')),
                ('publication_year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año de publicación')),
                ('synopsis', models.TextField(blank=True, null=True, verbose_name='Sinopsis')),
                ('paises', models.ManyToManyField(blank=True, to='catalog.Country')),
            ],
            options={
                'verbose_name': 'Creación',
                'verbose_name_plural': 'Creaciones',
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10000, verbose_name='Nombre')),
            ],
            options={
                'verbose_name_plural': 'Editoriales',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Genero',
                'verbose_name_plural': 'Generos',
            },
        ),
        migrations.CreateModel(
            name='Hipotext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unnecesary_field', models.CharField(max_length=10000, verbose_name='Campo innecesario para funcionamiento')),
            ],
            options={
                'verbose_name': 'Hipotexto',
                'verbose_name_plural': 'Hipotextos',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Idioma')),
            ],
            options={
                'verbose_name': 'Idioma',
                'verbose_name_plural': 'Idiomas',
            },
        ),
        migrations.CreateModel(
            name='Metatext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unnecesary_field', models.CharField(max_length=10000, verbose_name='Campo innecesario para funcionamiento')),
            ],
            options={
                'verbose_name': 'Metatexto',
                'verbose_name_plural': 'Metatextos',
            },
        ),
        migrations.CreateModel(
            name='Paratext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='Introducción')),
                ('prologue', models.TextField(blank=True, null=True, verbose_name='Prólogo')),
                ('epilogue', models.TextField(blank=True, null=True, verbose_name='Epílogo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
            ],
            options={
                'verbose_name': 'Paratexto',
                'verbose_name_plural': 'Paratextos',
            },
        ),
        migrations.CreateModel(
            name='TheaterDebut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Lugar')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Fecha')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCreation',
            fields=[
                ('creation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.creation')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('catalog.creation',),
        ),
        migrations.CreateModel(
            name='MediaCreation',
            fields=[
                ('creation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.creation')),
                ('IMDb', models.CharField(blank=True, max_length=10000, null=True)),
                ('commertial_editions', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Ediciones comerciales')),
                ('idioma_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.language')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('catalog.creation',),
        ),
        migrations.CreateModel(
            name='Videoclips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('videoclip', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Enlace al videoclip')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('paratext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paratext_videoclip', to='catalog.paratext')),
            ],
            options={
                'verbose_name': 'VideoClip',
                'verbose_name_plural': 'VideoClips',
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link')),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_social_networks', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Social Network',
                'verbose_name_plural': 'Social Networks',
            },
        ),
        migrations.CreateModel(
            name='Rulebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('paratext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paratext_rulebook', to='catalog.paratext')),
            ],
            options={
                'verbose_name': 'Libro de reglas',
                'verbose_name_plural': 'Libros de reglas',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=10000, null=True, verbose_name='Titulo')),
                ('build_id', models.CharField(editable=False, max_length=100, verbose_name='Autor/a de la ficha')),
                ('last_modified', models.DateField(default=datetime.date.today, editable=False, verbose_name='Última modificación')),
                ('creation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='catalog.creation')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='PressArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link')),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_press_article', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Artículo de prensa',
                'verbose_name_plural': 'Artículos de prensa',
            },
        ),
        migrations.AddField(
            model_name='paratext',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_paratext', to='catalog.product'),
        ),
        migrations.CreateModel(
            name='OtherSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Nombre')),
                ('title', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Título')),
                ('reference', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Referencia bibliográfica')),
                ('hipotext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hipotext_other_sources', to='catalog.hipotext')),
            ],
            options={
                'verbose_name': 'Otra fuente',
                'verbose_name_plural': 'Otras fuentes',
            },
        ),
        migrations.CreateModel(
            name='OtherLanguageTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10000, verbose_name='Título')),
                ('creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creation_other_language', to='catalog.creation')),
                ('idioma', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language', to='catalog.language')),
            ],
            options={
                'verbose_name': 'Título en otros idiomas',
                'verbose_name_plural': 'Título en otros idiomas',
            },
        ),
        migrations.CreateModel(
            name='OriginalEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('isbn', models.CharField(blank=True, max_length=10000, null=True, verbose_name='ISBN')),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editorial_original_edition', to='catalog.editorial')),
            ],
            options={
                'verbose_name': 'Edición original',
                'verbose_name_plural': 'Ediciones originales',
            },
        ),
        migrations.AddField(
            model_name='metatext',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_metatext', to='catalog.product'),
        ),
        migrations.CreateModel(
            name='MedialTransfers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hypertext', models.TextField(blank=True, null=True, verbose_name='Hipertexto')),
                ('Transmedialidad', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_transmediality', to='catalog.product')),
                ('product_owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_medialTransfer', to='catalog.product')),
            ],
            options={
                'verbose_name': 'Trasvase medial',
                'verbose_name_plural': 'Trasvases mediales',
            },
        ),
        migrations.CreateModel(
            name='Knot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Información del nudo')),
                ('productos', models.ManyToManyField(blank=True, related_name='related_knots', to='catalog.Product')),
            ],
            options={
                'verbose_name': 'Nodo',
                'verbose_name_plural': 'Nodos',
            },
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tn_ancestors_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks')),
                ('tn_ancestors_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count')),
                ('tn_children_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Children pks')),
                ('tn_children_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count')),
                ('tn_depth', models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('tn_descendants_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks')),
                ('tn_descendants_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count')),
                ('tn_index', models.PositiveIntegerField(default=0, editable=False, verbose_name='Index')),
                ('tn_level', models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level')),
                ('tn_priority', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority')),
                ('tn_order', models.PositiveIntegerField(default=0, editable=False, verbose_name='Order')),
                ('tn_siblings_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks')),
                ('tn_siblings_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count')),
                ('name', models.CharField(max_length=200, verbose_name='Palabra')),
                ('tn_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='catalog.keyword', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Árbol de jerarquía',
                'verbose_name_plural': 'Palabras clave',
                'ordering': ['tn_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hipotext',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_hipotext', to='catalog.product'),
        ),
        migrations.CreateModel(
            name='Fandom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre')),
                ('link', models.CharField(blank=True, max_length=200, null=True, verbose_name='Link')),
                ('type', models.CharField(choices=[('Foro', 'Foro'), ('FanFiction', 'Fanfiction'), ('Fanart', 'Fanart'), ('Mod', 'Mod'), ('Wiki', 'Wiki'), ('Meme', 'Meme'), ('Parodia', 'Parodia')], max_length=10000)),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_fandoms', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Tipo de fandom',
                'verbose_name_plural': 'Tipos de fandom',
            },
        ),
        migrations.CreateModel(
            name='Extras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('videoclip', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Video del trailer')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('paratext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paratext_extras', to='catalog.paratext')),
            ],
            options={
                'verbose_name': 'Extra',
                'verbose_name_plural': 'Extras',
            },
        ),
        migrations.CreateModel(
            name='DocumentarySource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Nombre')),
                ('title', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Título')),
                ('reference', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Referencia bibliográfica')),
                ('hipotext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hipotext_documentary_sources', to='catalog.hipotext')),
            ],
            options={
                'verbose_name': 'Fuente documental',
                'verbose_name_plural': 'Fuentes documentales',
            },
        ),
        migrations.CreateModel(
            name='Declaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link')),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_declarations', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Declaración autorizada',
                'verbose_name_plural': 'Declaraciones autorizadas',
            },
        ),
        migrations.CreateModel(
            name='Criticism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link')),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_criticism', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Crítica',
                'verbose_name_plural': 'Críticas',
            },
        ),
        migrations.AddField(
            model_name='creation',
            name='palabras_clave',
            field=models.ManyToManyField(blank=True, to='catalog.KeyWord'),
        ),
        migrations.AddField(
            model_name='creation',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_catalog.creation_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('paratext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paratext_cover', to='catalog.paratext')),
            ],
            options={
                'verbose_name': 'Portada',
                'verbose_name_plural': 'Portadas',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_name', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Nombre de la colección')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('editorial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editorial_collection', to='catalog.editorial')),
            ],
            options={
                'verbose_name': 'Colección',
                'verbose_name_plural': 'Colecciones',
            },
        ),
        migrations.CreateModel(
            name='ClassicSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Nombre')),
                ('title', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Título')),
                ('reference', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Referencia bibliográfica')),
                ('hipotext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hipotext_classic_sources', to='catalog.hipotext')),
            ],
            options={
                'verbose_name': 'Fuente clásica',
                'verbose_name_plural': 'Fuentes clásicas',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link')),
                ('metatext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metatext_blogs', to='catalog.metatext')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Bibliography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studies_tradition_classical_reception', models.TextField(blank=True, null=True, verbose_name='Estudios de Tradición y Recepción Clásica')),
                ('other_studies', models.TextField(blank=True, null=True, verbose_name='Otros estudios')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_bibliography', to='catalog.product')),
            ],
            options={
                'verbose_name': 'Bibliografía',
                'verbose_name_plural': 'Bibliografías',
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('institution_name', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Nombre de la institucion')),
                ('text', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Información del premio')),
                ('creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creation_award', to='catalog.creation')),
            ],
            options={
                'verbose_name': 'Premio',
                'verbose_name_plural': 'Premios',
            },
        ),
        migrations.CreateModel(
            name='AdsTrailers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('videoclip', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Video del trailer')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('paratext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paratext_adstrailer', to='catalog.paratext')),
            ],
            options={
                'verbose_name': 'Anuncio o tráiler',
                'verbose_name_plural': 'Anuncios y tráileres',
            },
        ),
        migrations.CreateModel(
            name='Theatre',
            fields=[
                ('creation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.creation')),
                ('stage_direction', models.TextField(blank=True, null=True, verbose_name='Dirección escénica')),
                ('producer', models.TextField(blank=True, null=True, verbose_name='Producción')),
                ('cast', models.TextField(blank=True, null=True, verbose_name='Reparto')),
                ('music', models.TextField(blank=True, null=True, verbose_name='Música')),
                ('lighting', models.TextField(blank=True, null=True, verbose_name='Iluminación')),
                ('sound', models.TextField(blank=True, null=True, verbose_name='Sonido')),
                ('other_data', models.TextField(blank=True, null=True, verbose_name='Otros datos')),
                ('dramatic_text', models.TextField(blank=True, null=True, verbose_name='Texto dramático')),
                ('remake', models.TextField(blank=True, null=True, verbose_name='Remake info')),
                ('repositions', models.TextField(blank=True, null=True, verbose_name='Reposiciones')),
                ('links', models.TextField(blank=True, null=True, verbose_name='Links')),
                ('Remake link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remake_theatre', to='catalog.product')),
                ('estreno', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.theaterdebut')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
                ('idioma_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.language')),
            ],
            options={
                'verbose_name': 'Teatro',
            },
            bases=('catalog.creation',),
        ),
        migrations.CreateModel(
            name='Staging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artistic_direction', models.TextField(blank=True, null=True, verbose_name='Dirección artística')),
                ('producer', models.TextField(blank=True, null=True, verbose_name='Producción')),
                ('cast', models.TextField(blank=True, null=True, verbose_name='Reparto')),
                ('location', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Lugar')),
                ('theatre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theatre_staging', to='catalog.theatre', verbose_name='Obra de teatro asociada')),
            ],
            options={
                'verbose_name': 'Puesta en escena',
                'verbose_name_plural': 'Puestas en escena',
            },
        ),
        migrations.CreateModel(
            name='Reissue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('isbn', models.CharField(blank=True, max_length=10000, null=True, verbose_name='ISBN')),
                ('location', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Lugar')),
                ('traductor', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Traductor')),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editorial_reissue', to='catalog.editorial')),
                ('libraryCreation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_creation_reissue', to='catalog.librarycreation')),
            ],
            options={
                'verbose_name': 'Reedición',
                'verbose_name_plural': 'Reediciones',
            },
        ),
        migrations.CreateModel(
            name='OtherLanguageEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('isbn', models.CharField(blank=True, max_length=10000, null=True, verbose_name='ISBN')),
                ('location', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Lugar')),
                ('traductor', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Traductor')),
                ('editorial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='editorial', to='catalog.editorial')),
                ('idioma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_other_language_edition', to='catalog.language')),
                ('libraryCreation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_creation_other_language_edition', to='catalog.librarycreation')),
            ],
            options={
                'verbose_name': 'Edición en otro idioma',
                'verbose_name_plural': 'Ediciones en otros idiomas',
            },
        ),
        migrations.CreateModel(
            name='OtherCountriesDebut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Descripción')),
                ('year', models.IntegerField(choices=[(1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Año')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.country')),
                ('creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mediacreation_other_countries_debut', to='catalog.mediacreation', verbose_name='Creación')),
            ],
            options={
                'verbose_name': 'Debut en otros países',
                'verbose_name_plural': 'Debut en otros países',
            },
        ),
        migrations.CreateModel(
            name='Musica',
            fields=[
                ('creation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.creation')),
                ('artist', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Artista')),
                ('album', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Álbum')),
                ('discography', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Discográfica')),
                ('composer', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Compositor')),
                ('lyricist', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Letrista')),
                ('mixing', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Mezcla')),
                ('remastering', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Reedición')),
                ('cover_design', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Diseño de carátula')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
                ('idioma_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.language')),
            ],
            options={
                'verbose_name': 'Música',
            },
            bases=('catalog.creation',),
        ),
        migrations.AddField(
            model_name='librarycreation',
            name='original_edition',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creation_original_edition', to='catalog.originaledition'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=10000, null=True, verbose_name='Link de la imagen')),
                ('theatre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theatre_images', to='catalog.theatre', verbose_name='Obra de teatro asociada')),
            ],
            options={
                'verbose_name': 'Cartel o fotografía',
                'verbose_name_plural': 'Carteles y fotografías',
            },
        ),
        migrations.CreateModel(
            name='Videogame',
            fields=[
                ('mediacreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.mediacreation')),
                ('batch_number', models.IntegerField(blank=True, null=True, verbose_name='Número de entregas')),
                ('development', models.TextField(blank=True, null=True, verbose_name='Desarrollo')),
                ('distribution', models.TextField(blank=True, null=True, verbose_name='Distribución')),
                ('design', models.TextField(blank=True, null=True, verbose_name='Diseño')),
                ('plataforms', models.TextField(blank=True, null=True, verbose_name='Plataformas')),
                ('official_website', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Web oficial')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Videojuego',
            },
            bases=('catalog.mediacreation',),
        ),
        migrations.CreateModel(
            name='TVSerie',
            fields=[
                ('mediacreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.mediacreation')),
                ('debut', models.IntegerField(blank=True, null=True, verbose_name='Año de debut')),
                ('number_seasons', models.IntegerField(blank=True, null=True, verbose_name='Número de temporadas')),
                ('number_chapters', models.IntegerField(blank=True, null=True, verbose_name='Número de capítulos')),
                ('remastering', models.TextField(blank=True, null=True, verbose_name='Reedición')),
                ('direction', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('producer', models.TextField(blank=True, null=True, verbose_name='Productora')),
                ('original_idea', models.TextField(blank=True, null=True, verbose_name='Idea original')),
                ('cast', models.TextField(blank=True, null=True, verbose_name='Reparto')),
                ('music', models.TextField(blank=True, null=True, verbose_name='Música')),
                ('costume', models.TextField(blank=True, null=True, verbose_name='Vestuario')),
                ('sound', models.TextField(blank=True, null=True, verbose_name='Sonido')),
                ('other_data', models.TextField(blank=True, null=True, verbose_name='Otros datos')),
                ('remake', models.TextField(blank=True, null=True, verbose_name='Remake info')),
                ('Remake link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remake_tvserie', to='catalog.product')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Serie TV',
            },
            bases=('catalog.mediacreation',),
        ),
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('librarycreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.librarycreation')),
                ('autorship', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Autoría')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Novela',
            },
            bases=('catalog.librarycreation',),
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('mediacreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.mediacreation')),
                ('remastering', models.TextField(blank=True, null=True, verbose_name='Reedición')),
                ('direction', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('producer', models.TextField(blank=True, null=True, verbose_name='Producción')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Guión')),
                ('cast', models.TextField(blank=True, null=True, verbose_name='Reparto')),
                ('music', models.TextField(blank=True, null=True, verbose_name='Música')),
                ('costume', models.TextField(blank=True, null=True, verbose_name='Vestuario')),
                ('sound', models.TextField(blank=True, null=True, verbose_name='Sonido')),
                ('other_data', models.TextField(blank=True, null=True, verbose_name='Otros datos')),
                ('earnings', models.IntegerField(blank=True, null=True, verbose_name='Taquilla')),
                ('remake', models.TextField(blank=True, null=True, verbose_name='Remake info')),
                ('Remake link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remake_movie', to='catalog.product')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Película',
            },
            bases=('catalog.mediacreation',),
        ),
        migrations.CreateModel(
            name='Comic',
            fields=[
                ('librarycreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.librarycreation')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Guión')),
                ('design', models.TextField(blank=True, null=True, verbose_name='Diseño')),
                ('colecciones', models.ManyToManyField(blank=True, related_name='collection_comic', to='catalog.Collection')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Comic',
            },
            bases=('catalog.librarycreation',),
        ),
        migrations.CreateModel(
            name='BoardGame',
            fields=[
                ('librarycreation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.librarycreation')),
                ('number_players', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=2, verbose_name='Número de jugadores')),
                ('age', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99), (100, 100)], default=1, verbose_name='Edad minima')),
                ('author', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Creador')),
                ('ilustrator', models.TextField(blank=True, null=True, verbose_name='Ilustrador')),
                ('developer', models.TextField(blank=True, null=True, verbose_name='Desarrollador')),
                ('design', models.TextField(blank=True, null=True, verbose_name='Diseño')),
                ('genero', models.ManyToManyField(blank=True, to='catalog.Genre')),
            ],
            options={
                'verbose_name': 'Juego de mesa',
            },
            bases=('catalog.librarycreation',),
        ),
    ]
